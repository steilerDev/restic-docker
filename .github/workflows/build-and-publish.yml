name: Build & Publish

on: [push, pull_request]

env:
  PKG_NAME: docker-base
#  NODE_VERSION: 17

# Required secrets:
# DOCKER_DEV_HOST       Self-hosted docker registry
# DOCKER_DEV_USERNAME   Username for self-hosted docker registry
# DOCKER_DEV_PWD        Password for self-hosted docker registry
#
# DOCKER_USERNAME       DockerHub username
# DOCKER_PWD            DockerHub password


jobs:
  build:
    name: Build Project
    # don't run for template repo
    if: github.repository != 'steilerDev/docker-base'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
#    - name: Setup node
#      uses: actions/setup-node@v2
#      with:
#        node-version: ${{ env.NODE_VERSION }}
#    - name: Install dependencies & build app
#      run: |
#        npm install && \
#        npm run test && \
#        npm run build && \
#        npm run docs
    - name: Package docker artifacts
      run: tar -C ./rootfs -czf ./rootfs.tar.gz ./
    - name: Upload docker artifacts
      uses: actions/upload-artifact@v2
      with:
        name: rootfs
        path: ./rootfs.tar.gz

  publish-docker-dev:
    name: Publish Project to steilerGroup-Docker
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: rootfs
    - name: Login to Docker Registry
      run: docker login ${{secrets.DOCKER_DEV_HOST}} -u ${{secrets.DOCKER_DEV_USERNAME}} -p ${{secrets.DOCKER_DEV_PWD}}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_DEV_HOST}}/$PKG_NAME:latest
    - name: Push the Docker image
      run: docker push ${{secrets.DOCKER_DEV_HOST}}/$PKG_NAME:latest

  publish-dockerhub:
    name: Publish Project to DockerHub
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: rootfs
    - name: Login to DockerHub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PWD}}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $PKG_NAME
#    - name: Get current version
#      id: package-version
#      uses: martinbeentjes/npm-get-version-action@master
#      with:
#        path: rootfs/opt/icloud-photos-sync
    - name: Tag the Docker image
      run: |
        docker image tag $PKG_NAME ${{secrets.DOCKER_USERNAME}}/$PKG_NAME:latest && \
#        docker image tag $PKG_NAME ${{secrets.DOCKER_USERNAME}}/$PKG_NAME:${{ steps.package-version.outputs.current-version}} && \
        docker image ls
    - name: Push to DockerHub
      run: docker image push --all-tags ${{secrets.DOCKER_USERNAME}}/$PKG_NAME
    - name: Update DockerHub readme
      uses: peter-evans/dockerhub-description@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PWD }}
        repository: ${{secrets.DOCKER_USERNAME}}/${{env.PKG_NAME}}
        readme-filepath: ./README.md